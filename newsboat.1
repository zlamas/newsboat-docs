'\" t
.\"     Title: newsboat
.\"    Author: Alexander Batischev
.\" Generator: Asciidoctor 2.0.20
.\"      Date: 2023-12-29
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "NEWSBOAT" "1" "2023-12-29" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
newsboat \- an RSS/Atom feed reader for text terminals
.SH "SYNOPSIS"
.sp
\fBnewsboat\fP [\fB\-r\fP] [\fB\-e\fP] [\fB\-i\fP \fIopmlfile\fP] [\fB\-u\fP \fIurlfile\fP] [\fB\-c\fP \fIcachefile\fP] [\fB\-C\fP \fIconfigfile\fP] [\fB\-X\fP] [\fB\-o\fP] [\fB\-x\fP \fIcommand\fP...] [\fB\-h\fP]
.SH "DESCRIPTION"
.sp
\fINewsboat\fP is an RSS/Atom feed reader for text terminals. RSS and Atom are a
number of widely\-used XML formats to transmit, publish and syndicate articles,
for example news or blog articles.  Newsboat is designed to be used on text
terminals on Unix or Unix\-like systems such as GNU/Linux, BSD or macOS.
.SH "OPTIONS"
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
Display help
.RE
.sp
\fB\-r\fP, \fB\-\-refresh\-on\-start\fP
.RS 4
Refresh feeds on start
.RE
.sp
\fB\-e\fP, \fB\-\-export\-to\-opml\fP
.RS 4
Export feeds as OPML to stdout. This currently outputs OPML 1.0, losing
all tag information, but this is subject to change to 2.0 in the future.
.RE
.sp
\fB\-\-export\-to\-opml2\fP
.RS 4
Export feeds as OPML 2.0, including tags, to stdout
.RE
.sp
\fB\-X\fP, \fB\-\-vacuum\fP
.RS 4
Compact the cache by: 1) reclaiming the space that was left empty when
data was deleted; and 2) defragmenting the entries in the cache. This
\fBdoesn\(cqt\fP delete the entries; for that, see \fIcleanup\-on\-quit\fP,
\fIdelete\-read\-articles\-on\-quit\fP, \fIkeep\-articles\-days\fP, and \fImax\-items\fP
settings.
.RE
.sp
\fB\-\-cleanup\fP
.RS 4
Remove unreferenced entries from the cache and quit Newsboat. Feeds and
their articles will be removed if the feedurl is no longer in the
\fIurls\fP file.
.sp
Additionally, if the \fIdelete\-read\-articles\-on\-quit\fP configuration is set, all
read articles will be deleted (including articles of feeds which are still in
the \fIurls\fP file).
.RE
.sp
\fB\-v\fP, \fB\-V\fP, \fB\-\-version\fP
.RS 4
Get version information about Newsboat and the libraries it uses
.RE
.sp
\fB\-i\fP \fIopmlfile\fP, \fB\-\-import\-from\-opml\fP=\fIopmlfile\fP
.RS 4
Import an OPML file
.RE
.sp
\fB\-u\fP \fIurlfile\fP, \fB\-\-url\-file\fP=\fIurlfile\fP
.RS 4
Use an alternative URL file
.RE
.sp
\fB\-c\fP \fIcachefile\fP, \fB\-\-cache\-file\fP=\fIcachefile\fP
.RS 4
Use an alternative cache file
.RE
.sp
\fB\-C\fP \fIconfigfile\fP, \fB\-\-config\-file\fP=\fIconfigfile\fP
.RS 4
Use an alternative configuration file
.RE
.sp
\fB\-x\fP \fIcommand\fP ..., \fB\-\-execute\fP=\fIcommand\fP...
.RS 4
Execute one or more commands to run Newsboat unattended. Currently available
commands are \fIreload\fP and \fIprint\-unread\fP.
.RE
.sp
\fB\-l\fP \fIloglevel\fP, \fB\-\-log\-level\fP=\fIloglevel\fP
.RS 4
Generate a logfile with a certain \fIloglevel\fP. Valid loglevels are 1 to 6. An
actual logfile will only be written when you provide a logfile name.
.RE
.sp
\fB\-d\fP \fIlogfile\fP, \fB\-\-log\-file\fP=\fIlogfile\fP
.RS 4
Use this \fIlogfile\fP as output when logging debug messages. Please note that this
only works when providing a loglevel.
.RE
.sp
\fB\-E\fP \fIfile\fP, \fB\-\-export\-to\-file\fP=\fIfile\fP
.RS 4
Export a list of read articles (resp. their GUIDs). This can be used to
transfer information about read articles between different computers.
.RE
.sp
\fB\-I\fP \fIfile\fP, \fB\-\-import\-from\-file\fP=\fIfile\fP
.RS 4
Import a list of read articles and mark them as read if they are held in the
cache. This is to be used in conjunction with the \fB\-E\fP commandline parameter.
.RE
.SH "FIRST STEPS"
.sp
After you\(cqve installed Newsboat, you can run it for the first time by typing
\fInewsboat\fP on your command prompt. This will bring you the following message:
.sp
.if n .RS 4
.nf
.fam C
Error: no URLs configured. Please fill the file /home/ak/.newsboat/urls with RSS feed URLs or import an OPML file.

Newsboat 2.22
usage: ./newsboat [\-i <file>|\-e] [\-u <urlfile>] [\-c <cachefile>] [\-x <command> ...] [\-h]
    \-e, \-\-export\-to\-opml            export OPML feed to stdout
    \-r, \-\-refresh\-on\-start          refresh feeds on start
    \-i, \-\-import\-from\-opml=<file>   import OPML file
    \-u, \-\-url\-file=<urlfile>        read RSS feed URLs from <urlfile>
    \-c, \-\-cache\-file=<cachefile>    use <cachefile> as cache file
    \-C, \-\-config\-file=<configfile>  read configuration from <configfile>
    \-X, \-\-vacuum                    compact the cache
    \-x, \-\-execute=<command>...      execute list of commands
    \-q, \-\-quiet                     quiet startup
    \-v, \-\-version                   get version information
    \-l, \-\-log\-level=<loglevel>      write a log with a certain loglevel (valid values: 1 to 6)
    \-d, \-\-log\-file=<logfile>        use <logfile> as output log file
    \-E, \-\-export\-to\-file=<file>     export list of read articles to <file>
    \-I, \-\-import\-from\-file=<file>   import list of read articles from <file>
    \-h, \-\-help                      this help
        \-\-cleanup                   remove unreferenced items from cache
.fam
.fi
.if n .RE
.sp
This means that Newsboat can\(cqt start without any configured feeds.
.SS "Adding Feeds"
.sp
To add feeds to Newsboat, you can simply add one feed URL per line to the \fI~/.newsboat/urls\fP
configuration file:
.sp
.if n .RS 4
.nf
.fam C
http://rss.cnn.com/rss/cnn_topstories.rss
http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml
.fam
.fi
.if n .RE
.sp
You can also import an OPML file by running \fInewsboat \-i blogroll.opml\fP
.sp
.RS 4
.sp
\fBAdding comments\fP Lines that start with \fI#\fP can contain anything you want.
Comments are ignored by Newsboat, but can serve as documentation for you.
Please note, that commenting out URLs for debugging
purposes might lead to unexpected data loss, see
\fIcleanup\-on\-quit\fP for more details.
.RE
.sp
\fBFeeds with restricted access\fP
.sp
If you need to add URLs that have restricted access, simply
provide username/password:
.sp
.if n .RS 4
.nf
.fam C
https://username:password@hostname.domain.tld/feed.rss
.fam
.fi
.if n .RE
.sp
In case there is a \fI@\fP in the username, you need to write it as \fI%40\fP.
.sp
In order to protect usernames and passwords, make sure to restrict read access
for \fI~/.newsboat/urls\fP to you and optionally your group:
.sp
.if n .RS 4
.nf
.fam C
$ chmod u=rw,g=r,o= ~/.newsboat/urls
.fam
.fi
.if n .RE
.sp
Newsboat makes sure to not display usernames and passwords in its user interface.
.sp
\fBLocal files as feeds\fP
.sp
You can also configure local files as feeds, by prefixing the local path with
\fIfile://\fP and adding it to the \fIurls\fP file:
.sp
.if n .RS 4
.nf
.fam C
file:///var/log/rss_eventlog.xml
.fam
.fi
.if n .RE
.SS "First UI Interaction"
.sp
The main UI of Newsboat consists of three views
.sp
\fIFeed List View \(-> Article List View \(-> Article View\fP
.sp
You can drill down those views by pressing \f(CREnter\fP and move to the previous one by pressing
\f(CRQ\fP. Pressing \f(CRQ\fP on the \fIFeed List View\fP — or pressing \f(CRShift\0+\0Q\fP from anywhere — closes Newsboat.
.sp
You can also search articles\*(Aq title or content by pressing \f(CR/\fP on the \fIFeed List View\fP or the \fIArticle List View\fP.
On the \fIFeed List View\fP all articles of all feeds are taken into account.
On the \fIArticle List View\fP the articles of the current feed are taken into account.
When opening an article from a search result dialog, the search phrase is highlighted.
.sp
.RS 4
.sp
\fBSearch history\fP The history of all your searches is saved to the filesystem, to the
\fIhistory.search\fP file (stored next to the \fIcache.db\fP file). By default, the
last 100 search phrases are stored.
.sp
You can influence how many search phrases are stored by configuring \fIhistory\-limit\fP.
.RE
.sp
\fBFeed List View\fP
.sp
When you start Newsboat, it presents you with a list of feeds that you added previously.
.sp
You can now:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRShift\0+\0R\fP to download articles for all feeds.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRR\fP to download articles for the selected feed.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CR/\fP to search all articles in all feeds.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CREnter\fP to go to the article list of a selected feed.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRQ\fP to close Newsboat.
.RE
.sp
.RS 4
.sp
\fBLocal articles\fP Newsboat keeps the articles that it downloads.
When you start Newsboat again and reload a feed, old articles can still be
read even if they aren\(cqt in the current RSS feeds anymore. The maximum number
of articles is controlled by \fImax\-items\fP.
.RE
.sp
.RS 4
.sp
\fBCaching\fP Newsboat uses a number of measures to preserve the users\*(Aq and feed
providers\*(Aq bandwidth through the use of conditional HTTP downloading.
It saves every feed\(cqs "Last\-Modified" and "ETag" response header values
(if present) and advises the feed\(cqs HTTP server to only send data if the feed
has been updated. This doesn\(cqt only make feed downloads for RSS feeds with no new
updates faster, it also reduces the amount of transferred data per request.
.sp
You can disable conditional HTTP downloading per feed by configuring
\fIalways\-download\fP.
.RE
.sp
\fBArticle List View\fP
.sp
After you entered a feed, you can see the list of available articles
by their title.
A \fIN\fP on the left indicates that an article wasn\(cqt read yet.
.sp
You can now:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRQ\fP to go back to the \fIFeed List View\fP.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CR/\fP to search all articles of this feed.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CREnter\fP to read a selected article.
.RE
.sp
\fBArticle View\fP
.sp
On an article you can scroll through the text and read it.
Each link in the article has a number next to it.
.sp
You can now:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press any number to open an article link in the browser.
For numbers larger than 9 type \f(CR#\fP, then the number and press \f(CREnter\fP.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRO\fP to open the article in the browser.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Press \f(CRQ\fP to go back to the \fIArticle List View\fP.
.RE
.sp
.RS 4
.sp
\fBBrowser view\fP Sometimes the content of an article is empty or just
an abstract or short description.
You can always press \f(CRO\fP to view the complete article in a browser.
The default browser is \fIlynx\fP.
.sp
You can use your browser of choice by configuring \fIbrowser\fP.
.RE
.SH "CONFIGURATION"
.sp
Several aspects of Newsboat can be configured via a \fIconfig\fP file,
which is stored next to the \fIurls\fP file.
A configuration line looks like this in general:
.sp
.if n .RS 4
.nf
.fam C
<config\-command> <arg1> ...
.fam
.fi
.if n .RE
.sp
The configuration file can contain comments, which start with the \fI#\fP character and go as
far as the end of line.
.sp
.RS 4
.sp
\fBUser contrib\fP Newsboat also comes with user contributed content like scripts and color
themes. The user contributed content can be found in
\fI/usr/share/doc/newsboat/contrib/\fP. End users are encouraged to take a look as
they may find something useful.
.RE
.SS "Example"
.sp
An example configuration looks like this
.sp
.if n .RS 4
.nf
.fam C
# a comment
max\-items        100 # such comments are possible, too
browser          links
show\-read\-feeds  no

unbind\-key       R
bind\-key         ^R    reload\-all
.fam
.fi
.if n .RE
.SS "Splitting long lines into multiple ones"
.sp
Settings such as macros and
\fIignore\-article\fP can be quite lengthy. A long line can be
broken into multiple ones using backslashes. A backslash must be the last
character on the line and will immediately concatenate it with the following
line. It\(cqs important that \fInothing\fP follows the \fI\(rs\fP on the same line,
otherwise the \fI\(rs\fP character is treated "as is". For example:
.sp
.if n .RS 4
.nf
.fam C
macro p open; \(rs
reload; quit; \(rs
quit;         \(rs
quit \-\- "Opens, reloads then makes sure to quit newsboat"
.fam
.fi
.if n .RE
.sp
Please note that a backslash only makes Newsboat ignore the following newline.
It doesn\(cqt do \fIanything\fP else at all. For example, this nicely formatted
option:
.sp
.if n .RS 4
.nf
.fam C
ignore\-article \(rs
    "*" \(rs
    "author =~ \(rs"(\(rs
        John Doe| \(rs
        Mary Sue \(rs
    )\(rs""
.fam
.fi
.if n .RE
.sp
\fIdoes not\fP turn into this:
.sp
.if n .RS 4
.nf
.fam C
ignore\-article "*" "author =~ \(rs"(John Doe|Mary Sue)\(rs""
.fam
.fi
.if n .RE
.sp
Instead, as only newlines are removed, it turns to this:
.sp
.if n .RS 4
.nf
.fam C
ignore\-article     "*"     "author =~ \(rs"(        John Doe|         Mary Sue     )\(rs""
.fam
.fi
.if n .RE
.sp
For this reason, be conscious of where you\(cqre splitting the lines, because it
might matter.
.SS "Using Double Quotes"
.sp
.RS 4
.sp
\fBTL;DR\fP Use double quotes for strings that contain spaces or double quotes.
Escape double quotes (use \(rs") and backslashes (use \(rs\(rs). Don\(cqt escape stuff
outside of double quotes, and don\(cqt use single quotes for quoting — Newsboat
doesn\(cqt support that.
.RE
.sp
Many of Newsboat\(cqs options expect strings as arguments, be it commands,
passwords, dialog titles, URLs etc. Some options even take \fImultiple\fP strings
at once. These strings can contain spaces, which might confuse Newsboat since
it already uses spaces to separate option names from option arguments.
.sp
To help Newsboat understand your intent, put such strings into double quotes:
.sp
.if n .RS 4
.nf
.fam C
browser "firefox \-\-new\-tab %u"
.fam
.fi
.if n .RE
.sp
What if you need a double quote inside a string? Escape it with a backslash:
.sp
.if n .RS 4
.nf
.fam C
ocnews\-password "UnbalancedQuotes\(rs"AreSoFun!"
.fam
.fi
.if n .RE
.sp
And what about the backslash itself? Escape it, too! Suppose you have a program
called \fImy favourite pager\fP, and you want to view articles with it. Newsboat
ultimately passes commands to the shell, and shell expects spaces to be escaped
if you want them preserved. But since Newsboat interprets backslashes, you have
to add \fIanother\fP layer of escaping. Thus, you end up with a command like this:
.sp
.if n .RS 4
.nf
.fam C
pager "/usr/bin/my\(rs\(rs favourite\(rs\(rs pager"
.fam
.fi
.if n .RE
.SS "Shell Evaluation"
.sp
It is also possible to integrate the output of external commands
into the configuration. The text between two \fI`\fP backticks is evaluated
as shell command, and its output is used. This works like backtick evaluation in
Bourne\-compatible shells and allows users to use external information from the
system within the configuration.
.SS "Escaping"
.sp
Backticks and \fI#\fP characters can be escaped with a backslash
(e.g. \fI\(rs`\fP and \fI\(rs#\fP).
In this case, they are replaced with literal \fI`\fP or \fI#\fP in the
configuration.
.SS "Key Bindings"
.sp
You can bind a key to an operation with the \fIbind\-key\fP configuration command.
You can specify an optional dialog. This is the context in which the key binding is active.
.sp
The syntax for a key binding looks like this:
.sp
.if n .RS 4
.nf
.fam C
bind\-key <key> <operation> [<dialog>]
.fam
.fi
.if n .RE
.sp
\fBKey\fP
.sp
Lowercase keys, uppercase keys and special characters are written literally.
.sp
Key combinations with \f(CRCtrl\fP are written using the caret \fI^\fP.
For instance \f(CRCtrl\0+\0R\fP equals to \fI^R\fP.
Please be aware that all Ctrl\-related key combinations need to be written in uppercase.
.sp
The following identifiers for special keys are supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIENTER\fP (Enter key)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIBACKSPACE\fP (backspace key)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fILEFT\fP (left cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIRIGHT\fP (right cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIUP\fP (up cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIDOWN\fP (down cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIPPAGE\fP (page up cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fINPAGE\fP (page down cursor)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIHOME\fP (cursor to beginning of list/article)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIEND\fP (cursor to end of list/article)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIESC\fP (Esc key)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fITAB\fP (Tab key)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIF1\fP to \fIF12\fP (F1 key to F12 key)
.RE
.sp
\fBOperation\fP
.sp
An operation gets executed when pressing the corresponding key.
For a complete list of available operations see [_newsboat_operations] and [_podboat_operations].
.sp
\fBDialog\fP
.sp
A dialog is a context in which the key binding is active.
Available dialogs are:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIall\fP (default if not specified)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIfeedlist\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIfilebrowser\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIhelp\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIarticlelist\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIarticle\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fItagselection\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIfilterselection\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIurlview\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIpodboat\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIdirbrowser\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIsearchresultslist\fP
.RE
.SS "Colors"
.sp
It is possible to configure custom color settings in Newsboat. The basic configuration
syntax is:
.sp
.if n .RS 4
.nf
.fam C
color <element> <foreground color> <background color> [<attribute> ...]
.fam
.fi
.if n .RE
.sp
This means that if you configure colors for a certain element, you need to provide
a foreground color and a background color as a minimum. The following colors are
supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIblack\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIred\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIgreen\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIyellow\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIblue\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fImagenta\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIcyan\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIwhite\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIdefault\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIcolor<n>\fP, e.g. \fIcolor123\fP
.RE
.sp
The \fIdefault\fP color means that the terminal\(cqs default color will be used. The
\fIcolor<n>\fP color name (where \fI<n>\fP is a decimal number \fBnot\fP starting with zero)
can be used if your terminal supports 256 colors (e.g. \fIgnome\-terminal\fP, or \fIxterm\fP
with \fITERM\fP set to \fIxterm\-256color\fP). Newsboat contains support for 256 color
terminals since version 2.1. For a complete chart of colors and their
corresponding numbers, please see
.URL "https://www.calmar.ws/vim/256\-xterm\-24bit\-rgb\-color\-chart.html" "" "."
.sp
Optionally, you can also add one or more attributes. The following attributes are
supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIstandout\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIunderline\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIreverse\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIblink\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIdim\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIbold\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIprotect\fP
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIinvis\fP
.RE
.sp
Currently, the following elements are supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIbackground\fP: the application background
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIlistnormal\fP: a normal list item
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIlistfocus\fP: the currently selected list item
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIlistnormal_unread\fP: an unread list item
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIlistfocus_unread\fP: the currently selected unread list item
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fItitle\fP (\fIadded in 2.25\fP): current dialog\(cqs title, which is usually at the
top of the screen (but see \fIshow\-title\-bar\fP and
\fIswap\-title\-and\-hints\fP). If you don\(cqt specify
a style for this element, then the \fIinfo\fP style is used
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIinfo\fP: the hints bar, which is usually at the bottom of the screen (but see
\fIshow\-keymap\-hint\fP and
\fIswap\-title\-and\-hints\fP)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIhint\-key\fP (\fIadded in 2.25\fP): a key in the hints bar. If you don\(cqt specify
a style for this element, then the \fIinfo\fP style is used
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIhint\-keys\-delimiter\fP (\fIadded in 2.25\fP): the comma that separates keys in the
hints bar. If you don\(cqt specify a style for this element, then the \fIinfo\fP
style is used
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIhint\-separator\fP (\fIadded in 2.25\fP): the colon separating keys from their
descriptions in the hints bar. If you don\(cqt specify a style for this element,
then the \fIinfo\fP style is used
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIhint\-description\fP (\fIadded in 2.25\fP): a description of a key in the hints
bar. If you don\(cqt specify a style for this element, then the \fIinfo\fP style is
used
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIarticle\fP: the article text
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
\fIend\-of\-text\-marker\fP: filler lines (~) below blocks of text
.RE
.sp
The default color configuration of Newsboat looks like this:
.sp
.if n .RS 4
.nf
.fam C
color background          white   black
color listnormal          white   black
color listfocus           yellow  blue   bold
color listnormal_unread   magenta black
color listfocus_unread    magenta blue   bold
color title               yellow  blue   bold
color info                yellow  blue   bold
color hint\-key            yellow  blue   bold
color hint\-keys\-delimiter yellow  white
color hint\-separator      yellow  white  bold
color hint\-description    yellow  white
color article             white   black
.fam
.fi
.if n .RE
.SH "CONFIGURATION COMMANDS"
.sp
\fIalways\-display\-description\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the description will always be displayed even if e.g. a \fI<content:encoded>\fP tag has been found. (example: always\-display\-description yes)
.RE
.sp
\fIalways\-download\fP (parameters: <url> [<url>...]; default value: \fIn/a\fP)
.RS 4
Specifies one or more feed URLs that should always be downloaded, regardless of their Last\-Modified timestamp and ETag header. This option can be specified multiple times. (example: always\-download "https://www.n\-tv.de/23.rss")
.RE
.sp
\fIarticle\-sort\-order\fP (parameters: <sortfield>[\-<direction>]; default value: \fIdate\-asc\fP)
.RS 4
The <sortfield> specifies which article property shall be used for sorting. Currently available are: \fIdate\fP, \fItitle\fP, \fIflags\fP, \fIauthor\fP, \fIlink\fP, \fIguid\fP, and \fIrandom\fP. The optional <direction> can be either \fIasc\fP for ascending order, or \fIdesc\fP for descending order. Note that direction does not affect the \fIrandom\fP sorting. For \fIdate\fP, \fIdesc\fP order is the default, i.e. \fIdate\fP is the same as \fIdate\-desc\fP; for all others, \fIasc\fP is the default. Also, the directions for \fIdate\fP are reversed: \fIdesc\fP means the newest items are first, whereas \fIasc\fP means the oldest items are first. These inconsistencies will be fixed in a future major version of Newsboat. (example: article\-sort\-order author\-desc)
.RE
.sp
\fIarticlelist\-format\fP (parameters: <format>; default value: \fI"%4i %f %D %6L  %?T?|%\-17T|  ?%t"\fP)
.RS 4
This variable defines the format of entries in the article list. See the respective section in the documentation for more information on format strings. (example: articlelist\-format "%4i %f %D   %?T?|%\-17T|  ?%t")
.RE
.sp
\fIarticlelist\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Articles in feed \*(Aq%T\*(Aq (%u unread, %t total)%?F? matching filter \*(Aq%F\*(Aq&? \- %U" (localized)\fP)
.RS 4
Format of the title in article list. See "Format Strings" section of Newsboat manual for details on available formats. (example: articlelist\-title\-format "Articles in feed \*(Aq%T\*(Aq (%u unread)")
.RE
.sp
\fIauto\-reload\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, all feeds will be automatically reloaded at start up and then continuously after a certain time has passed (see \fIreload\-time\fP). See also \fIrefresh\-on\-startup\fP to only reload the feeds at start up, but not continuously. Enabling \fIsuppress\-first\-reload\fP omits the reload on start up. (example: auto\-reload yes)
.RE
.sp
\fIbind\-key\fP (parameters: <key> <operation> [<dialog>]; default value: \fIn/a\fP)
.RS 4
Bind key <key> to <operation>. This means that whenever <key> is pressed, then <operation> is executed (if applicable in the current dialog). For more information see Key Bindings. See also \fIunbind\-key\fP to remove a key binding. (example: bind\-key ^R reload\-all)
.RE
.sp
\fIbookmark\-autopilot\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, the configured bookmark command is executed without any further input asked from user, unless the url or the title cannot be found/guessed. (example: bookmark\-autopilot yes)
.RE
.sp
\fIbookmark\-cmd\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
If set, then <command> will be used as bookmarking plugin. See the documentation on bookmarking for further information. (example: bookmark\-cmd "~/bin/delicious\-bookmark.sh")
.RE
.sp
\fIbookmark\-interactive\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the configured bookmark command is an interactive program. (example: bookmark\-interactive yes)
.RE
.sp
\fIbrowser\fP (parameters: <command>; default value: \fI%BROWSER, otherwise lynx\fP)
.RS 4
Set the browser command to use when opening an article in the browser. If the \fIBROWSER\fP environment variable is set, it will be used as the default browser, otherwise lynx will be used. For more information, see Using Browser. (example: browser "w3m %u")
.RE
.sp
\fIcache\-file\fP (parameters: <path>; default value: \fI"~/.newsboat/cache.db" or "~/.local/share/cache.db" (see "Files" section)\fP)
.RS 4
This configuration option sets the cache file. This is especially useful if the filesystem of your home directory doesn\(cqt support proper locking (e.g. NFS). (example: cache\-file "/tmp/testcache.db")
.RE
.sp
\fIcleanup\-on\-quit\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then the cache gets locked and superfluous feeds and items are removed, such as feeds that can\(cqt be found in the urls configuration file anymore. Run \fInewsboat \-\-cleanup\fP to do this manually. If you encounter a warning about unreachable feeds having been found, you may see the feed urls listed by creating a log file via the \fIerror\-log\fP option. (example: cleanup\-on\-quit no)
.RE
.sp
\fIcolor\fP (parameters: <element> <fgcolor> <bgcolor> [<attribute> ...]; default value: \fIn/a\fP)
.RS 4
Set the foreground color, background color and optional attributes for a certain element. (example: color background white black)
.RE
.sp
\fIconfirm\-delete\-all\-articles\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then Newsboat will ask for confirmation whether the user wants to delete all articles. (example: confirm\-delete\-all\-articles no)
.RE
.sp
\fIconfirm\-exit\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then Newsboat will ask for confirmation whether the user really wants to quit Newsboat. (example: confirm\-exit yes)
.RE
.sp
\fIconfirm\-mark\-all\-feeds\-read\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then Newsboat will ask for confirmation whether the user wants to mark all feeds as read. (example: confirm\-mark\-all\-feeds\-read no)
.RE
.sp
\fIconfirm\-mark\-feed\-read\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then Newsboat will ask for confirmation on whether the user wants to mark a feed as read. (example: confirm\-mark\-feed\-read no)
.RE
.sp
\fIcookie\-cache\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Set a cookie cache. If set, cookies will be cached in (i.e. read from and written to) this file, using \c
.URL "http://www.cookiecentral.com/faq/#3.5" "Netscape format" "."
(example: cookie\-cache "~/.newsboat/cookies.txt")
.RE
.sp
\fIdatetime\-format\fP (parameters: <date/time format>; default value: \fI%b %d\fP)
.RS 4
This format specifies the date/time format in the article list. For a detailed documentation on most of the allowed formats, consult the manpage of strftime(3). %L is a custom format not available in strftime which lists the days since the article was published (e.g. "2 days ago"). (example: datetime\-format "%D, %R")
.RE
.sp
\fIdefine\-filter\fP (parameters: <name> <filterexpr>; default value: \fIn/a\fP)
.RS 4
With this command, you can predefine filters, which you can later select from a list, and which are then applied after selection. This is especially useful for filters that you need often and you don\(cqt want to enter them every time you need them. (example: define\-filter "all feeds with \*(Aqfun\*(Aq tag" "tags # \(rs"fun\(rs"")
.RE
.sp
\fIdelete\-read\-articles\-on\-quit\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, all read articles will be deleted when quiting Newsboat. This option only applies if \fIcleanup\-on\-quit\fP is set to \fIyes\fP or if the \fI\(emcleanup\fP argument is passed. (example: delete\-read\-articles\-on\-quit yes)
.RE
.sp
\fIdialogs\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Dialogs" (localized)\fP)
.RS 4
Format of the title in dialog list. See "Format Strings" section of Newsboat manual for details on available formats. (example: dialogs\-title\-format "%N %V \- Dialogs")
.RE
.sp
\fIdirbrowser\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- %?O?Open Directory&Save File? \- %f" (localized)\fP)
.RS 4
Format of the title in directory browser. See "Format Strings" section of Newsboat manual for details on available formats. (example: dirbrowser\-file\-format "%?O?Open Directory&Save File? \- %f")
.RE
.sp
\fIdisplay\-article\-progress\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then a read progress (in percent) is displayed in the article view. Otherwise, no read progress is displayed. (example: display\-article\-progress no)
.RE
.sp
\fIdownload\-full\-page\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then for all feed items with no content but with a link, the link is downloaded and the result used as content instead. This may significantly increase the download times of "empty" feeds. (example: download\-full\-page yes)
.RE
.sp
\fIdownload\-retries\fP (parameters: <number>; default value: \fI1\fP)
.RS 4
How many times Newsboat shall try to successfully download a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy. (example: download\-retries 4)
.RE
.sp
\fIdownload\-timeout\fP (parameters: <number>; default value: \fI30\fP)
.RS 4
The number of seconds Newsboat shall wait when downloading a feed before giving up. This is an option to improve the success of downloads on slow and shaky connections such as via a TOR proxy. (example: download\-timeout 60)
.RE
.sp
\fIerror\-log\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
If set, then user errors (e.g. errors regarding defunct RSS feeds) will be logged to this file. (example: error\-log "~/.newsboat/error.log")
.RE
.sp
\fIexternal\-url\-viewer\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
If set, then \fIshow\-urls\fP will pipe the current article to a specific external tool instead of using the internal URL viewer. This can be used to integrate tools such as urlview. (example: external\-url\-viewer "urlview")
.RE
.sp
\fIfeed\-sort\-order\fP (parameters: <sortfield>[\-<direction>]; default value: \fInone\fP)
.RS 4
The <sortfield> specifies which feed property shall be used for sorting; currently available are: \fIfirsttag\fP, \fItitle\fP, \fIarticlecount\fP, \fIunreadarticlecount\fP, \fIlastupdated\fP and \fInone\fP. The optional <direction> specifies the sort direction. \fIasc\fP specifies ascending sorting, \fIdesc\fP specifies descending sorting. \fIdesc\fP is the default. (example: feed\-sort\-order firsttag)
.RE
.sp
\fIfeedhq\-flag\-share\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and FeedHQ support is used, then all articles that are flagged with the specified flag are being "shared" in FeedHQ so that people that follow you can see it. (example: feedhq\-flag\-share "a")
.RE
.sp
\fIfeedhq\-flag\-star\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and FeedHQ support is used, then all articles that are flagged with the specified flag are being "starred" in FeedHQ and appear in the list of "Starred items". (example: feedhq\-flag\-star "b")
.RE
.sp
\fIfeedhq\-login\fP (parameters: <login>; default value: \fI""\fP)
.RS 4
This variable sets your FeedHQ login for FeedHQ support. (example: feedhq\-login "your\-login")
.RE
.sp
\fIfeedhq\-min\-items\fP (parameters: <number>; default value: \fI20\fP)
.RS 4
This variable sets the number of articles that are loaded from FeedHQ per feed. (example: feedhq\-min\-items 100)
.RE
.sp
\fIfeedhq\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
This variable sets your FeedHQ password for FeedHQ support. Double quotes and backslashes within it should be escaped. (example: feedhq\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIfeedhq\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: feedhq\-passwordeval "gpg \-\-decrypt ~/.newsboat/feedhq\-password.gpg")
.RE
.sp
\fIfeedhq\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: feedhq\-passwordfile "~/.newsboat/feedhq\-pw.txt")
.RE
.sp
\fIfeedhq\-show\-special\-feeds\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set and FeedHQ support is used, then "special feeds" like "People you follow" (articles shared by people you follow), "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list. (example: feedhq\-show\-special\-feeds "no")
.RE
.sp
\fIfeedhq\-url\fP (parameters: <url>; default value: \fI"https://feedhq.org/"\fP)
.RS 4
Configures the URL where your FeedHQ instance resides. (example: feedhq\-url "https://feedhq.example.com/")
.RE
.sp
\fIfeedlist\-format\fP (parameters: <format>; default value: \fI"%4i %n %11u %t"\fP)
.RS 4
This variable defines the format of entries in the feed list. See the respective section in the documentation for more information on format strings. (example: feedlist\-format " %n %4i \- %11u \-%> %t")
.RE
.sp
\fIfeedlist\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- %?F?Feeds&Your feeds? (%u unread, %t total)%?F? matching filter \*(Aq%F\*(Aq&?%?T? \- tag \*(Aq%T\*(Aq&?" (localized)\fP)
.RS 4
Format of the title in feed list. See "Format Strings" section of Newsboat manual for details on available formats. (example: feedlist\-title\-format "Feeds (%u unread, %t total)")
.RE
.sp
\fIfilebrowser\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- %?O?Open File&Save File? \- %f" (localized)\fP)
.RS 4
Format of the title in file browser. See "Format Strings" section of Newsboat manual for details on available formats. (example: filebrowser\-title\-format "%?O?Open File&Save File? \- %f")
.RE
.sp
\fIfreshrss\-flag\-star\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and FreshRSS support is used, then all articles that are flagged with the specified flag are being "starred" in FreshRSS and appear in the list of "Starred items". (example: freshrss\-flag\-star "b")
.RE
.sp
\fIfreshrss\-login\fP (parameters: <login>; default value: \fI""\fP)
.RS 4
This variable sets your FreshRSS login for FreshRSS support. (example: freshrss\-login "your\-login")
.RE
.sp
\fIfreshrss\-min\-items\fP (parameters: <number>; default value: \fI20\fP)
.RS 4
This variable sets the number of articles that are loaded from FreshRSS per feed. (example: freshrss\-min\-items 100)
.RE
.sp
\fIfreshrss\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
This variable sets your FreshRSS password for FreshRSS support. Double quotes and backslashes within it should be escaped. (example: freshrss\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIfreshrss\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: freshrss\-passwordeval "gpg \-\-decrypt ~/.newsboat/freshrss\-password.gpg")
.RE
.sp
\fIfreshrss\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: freshrss\-passwordfile "~/.newsboat/freshrss\-pw.txt")
.RE
.sp
\fIfreshrss\-show\-special\-feeds\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set and FreshRSS support is used, then a "Starred items" feed (containing your starred/favourited articles) appears in your subscription list. (example: freshrss\-show\-special\-feeds "no")
.RE
.sp
\fIfreshrss\-url\fP (parameters: <url>; default value: \fI""\fP)
.RS 4
Configures the URL for the Google Reader API endpoint of your FreshRSS instance. (example: freshrss\-url "https://freshrss.example.com/api/greader.php")
.RE
.sp
\fIgoto\-first\-unread\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then the first unread article will be selected whenever a feed is entered. (example: goto\-first\-unread no)
.RE
.sp
\fIgoto\-next\-feed\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then the next\-unread, prev\-unread and random\-unread keys will search in other feeds for unread articles if all articles in the current feed are read. If set to \fIno\fP, then these keys will stop in the current feed. (example: goto\-next\-feed no)
.RE
.sp
\fIhelp\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Help" (localized)\fP)
.RS 4
Format of the title in help window. See "Format Strings" section of Newsboat manual for details on available formats. (example: help\-title\-format "%N %V \- Help")
.RE
.sp
\fIhighlight\fP (parameters: <target> <regex> <fgcolor> [<bgcolor> [<attribute> ...]]; default value: \fIn/a\fP)
.RS 4
With this command, you can highlight text parts in the feed list, the article list and the article view. (example: highlight all "newsboat" red)
.RE
.sp
\fIhighlight\-article\fP (parameters: <filterexpr> <fgcolor> <bgcolor> [<attribute> ...]; default value: \fIn/a\fP)
.RS 4
With this command, you can highlight articles in the article list if they match a filter expression. (example: highlight\-article "author =~ \(rs"Andreas Krennmair\(rs"" white red bold)
.RE
.sp
\fIhighlight\-feed\fP (parameters: <filterexpr> <fgcolor> <bgcolor> [<attribute> ...]; default value: \fIn/a\fP)
.RS 4
With this command, you can highlight feeds in the feed list if they match a filter expression. (example: highlight\-feed \fIunread\0\(fc\0100\fP white red bold)
.RE
.sp
\fIhistory\-limit\fP (parameters: <number>; default value: \fI100\fP)
.RS 4
Defines the maximum number of entries of commandline resp. search history to be saved. To disable history saving, set it to 0. (example: history\-limit 0)
.RE
.sp
\fIhtml\-renderer\fP (parameters: <command>; default value: \fIinternal\fP)
.RS 4
If set to \fIinternal\fP, then the internal HTML renderer will be used. Otherwise, the specified command will be executed, the HTML to be rendered will be written to the command\(cqs stdin, and the program\(cqs output will be displayed. This makes it possible to use other, external programs, such as w3m, links or lynx, to render HTML. (example: html\-renderer "w3m \-dump \-T text/html")
.RE
.sp
\fIhttp\-auth\-method\fP (parameters: <method>; default value: \fIany\fP)
.RS 4
Set HTTP authentication method. Allowed values: \fIany\fP, \fIbasic\fP, \fIdigest\fP, \fIdigest_ie\fP (only available with libcurl 7.19.3 and newer), \fIgssnegotiate\fP, \fIntlm\fP and \fIanysafe\fP. (example: http\-auth\-method digest)
.RE
.sp
\fIignore\-article\fP (parameters: <feed> <filterexpr>; default value: \fIn/a\fP)
.RS 4
If a downloaded article from <feed> matches <filterexpr>, then it is ignored and not presented to the user. This command is further explained in the "kill file" section below. (example: ignore\-article "*" "title =~ \(rs"Windows\(rs"")
.RE
.sp
\fIignore\-mode\fP (parameters: [download/display]; default value: \fIdownload\fP)
.RS 4
This configuration option defines in what way an article is ignored (see \fIignore\-article\fP). If set to \fIdownload\fP, then it is ignored in the download/parsing phase and thus never written to the cache, if it set to \fIdisplay\fP, it is ignored when displaying articles but is kept in the cache. (example: ignore\-mode "display")
.RE
.sp
\fIinclude\fP (parameters: <path>; default value: \fIn/a\fP)
.RS 4
With this command, you can include other files to be interpreted as configuration files. This is especially useful to separate your configuration into several files, e.g. key configuration, color configuration, ... (example: include "~/.newsboat/colors")
.RE
.sp
\fIinoreader\-app\-id\fP (parameters: <string>; default value: \fI""\fP)
.RS 4
Unique application ID issued by Inoreader. See "Inoreader" section. (example: inoreader\-app\-id "123456789")
.RE
.sp
\fIinoreader\-app\-key\fP (parameters: <string>; default value: \fI""\fP)
.RS 4
Application key issued by Inoreader. See "Inoreader" section. (example: inoreader\-app\-key "TmV3c2JvYXQgcm9ja3MgOikK")
.RE
.sp
\fIinoreader\-flag\-share\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and Inoreader support is used, then all articles that are flagged with the specified flag are being "shared" in Inoreader so that people that follow you can see it. (example: inoreader\-flag\-share "a")
.RE
.sp
\fIinoreader\-flag\-star\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and Inoreader support is used, then all articles that are flagged with the specified flag are being "starred" in Inoreader and appear in the list of "Starred items". (example: inoreader\-flag\-star "b")
.RE
.sp
\fIinoreader\-login\fP (parameters: <login>; default value: \fI""\fP)
.RS 4
This variable sets your Inoreader login for Inoreader support. (example: inoreader\-login "your\-login")
.RE
.sp
\fIinoreader\-min\-items\fP (parameters: <number>; default value: \fI20\fP)
.RS 4
This variable sets the number of articles that are loaded from Inoreader per feed. (example: inoreader\-min\-items 100)
.RE
.sp
\fIinoreader\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
This variable sets your Inoreader password for Inoreader support. Double quotes and backslashes within it should be escaped. (example: inoreader\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIinoreader\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: inoreader\-passwordeval "gpg \-\-decrypt ~/.newsboat/inoreader\-password.gpg")
.RE
.sp
\fIinoreader\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: inoreader\-passwordfile "~/.newsboat/inoreader\-pw.txt")
.RE
.sp
\fIinoreader\-show\-special\-feeds\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set and Inoreader support is used, then "special feeds" like "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list. (example: inoreader\-show\-special\-feeds "no")
.RE
.sp
\fIitemview\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Article \*(Aq%T\*(Aq (%u unread, %t total)" (localized)\fP)
.RS 4
Format of the title in article view. See "Format Strings" section of Newsboat manual for details on available formats. (example: itemview\-title\-format "Article \*(Aq%T\*(Aq")
.RE
.sp
\fIkeep\-articles\-days\fP (parameters: <number>; default value: \fI0\fP)
.RS 4
If set to a number greater than 0, only articles that were published within the last <number> days are kept, and older articles are deleted. If set to 0, this option is not active. Note that changing this setting won\(cqt bring back the articles that were deleted earlier; currently, there\(cqs no non\-hacky way to bring back deleted articles. (example: keep\-articles\-days 30)
.RE
.sp
\fImacro\fP (parameters: <macro key> <command list> [\-\- "<macro description>"]; default value: \fIn/a\fP)
.RS 4
With this command, you can define a macro key and specify a list of commands that shall be executed when the macro prefix and the macro key are pressed. Optionally, a description can be added. If present, the description is shown in the help form. (example: macro k open; reload; quit \-\- "enter feed to reload it")
.RE
.sp
\fImark\-as\-read\-on\-hover\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then all articles that get selected in the article list are marked as read. (example: mark\-as\-read\-on\-hover yes)
.RE
.sp
\fImax\-browser\-tabs\fP (parameters: <number>; default value: \fI10\fP)
.RS 4
Set the maximum number of articles to open in a browser when using the \fIopen\-all\-unread\-in\-browser\fP or \fIopen\-all\-unread\-in\-browser\-and\-mark\-read\fP commands. (example: max\-browser\-tabs 4)
.RE
.sp
\fImax\-download\-speed\fP (parameters: <number>; default value: \fI0\fP)
.RS 4
If set to a number greater than 0, the download speed per download is set to that limit (in KB/s). (example: max\-download\-speed 50)
.RE
.sp
\fImax\-items\fP (parameters: <number>; default value: \fI0\fP)
.RS 4
Set the maximum number of articles a feed can contain. When the threshold is crossed, old articles are dropped. If the number is set to 0, then all articles are kept. (example: max\-items 100)
.RE
.sp
\fIminiflux\-login\fP (parameters: <username>; default value: \fI""\fP)
.RS 4
Sets the username for use with Miniflux. (example: miniflux\-login "admin")
.RE
.sp
\fIminiflux\-min\-items\fP (parameters: <number>; default value: \fI100\fP)
.RS 4
This variable sets the number of articles that are loaded from Miniflux per feed. (example: miniflux\-min\-items 20)
.RE
.sp
\fIminiflux\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
Configures the password for use with Miniflux. Double quotes and backslashes within it should be escaped. (example: miniflux\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIminiflux\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: miniflux\-passwordeval "gpg \-\-decrypt ~/.newsboat/miniflux\-password.gpg")
.RE
.sp
\fIminiflux\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: miniflux\-passwordfile "~/.newsboat/miniflux\-pw.txt")
.RE
.sp
\fIminiflux\-token\fP (parameters: <API Token>; default value: \fI""\fP)
.RS 4
Sets the API Token for use with Miniflux. (example: miniflux\-token "E\-uTqU8r55KucuHz26tJbXfrZVRndwY_mZAsEfcC8Bg=")
.RE
.sp
\fIminiflux\-tokeneval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your API token from an external command that is evaluated during login. This can be used to read your token from a gpg encrypted file or your system keyring. (example: miniflux\-tokeneval "gpg \-\-decrypt ~/.newsboat/miniflux\-token.gpg")
.RE
.sp
\fIminiflux\-tokenfile\fP (parameters: <API Token>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext token elsewhere in your system. (example: miniflux\-tokenfile "~/.newsboat/miniflux\-token.txt")
.RE
.sp
\fIminiflux\-url\fP (parameters: <url>; default value: \fI""\fP)
.RS 4
Configures the URL where the Miniflux installation you want to use resides. (example: miniflux\-url "https://example.com/miniflux/")
.RE
.sp
\fInewsblur\-login\fP (parameters: <login>; default value: \fI""\fP)
.RS 4
This variable sets your NewsBlur login for NewsBlur support. (example: newsblur\-login "your\-login")
.RE
.sp
\fInewsblur\-min\-items\fP (parameters: <number>; default value: \fI20\fP)
.RS 4
This variable sets the number of articles that are loaded from NewsBlur per feed. (example: newsblur\-min\-items 100)
.RE
.sp
\fInewsblur\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
This variable sets your NewsBlur password for NewsBlur support. Double quotes and backslashes within it should be escaped. (example: newsblur\-password "here_goesAquote:\(rs"")
.RE
.sp
\fInewsblur\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: newsblur\-passwordeval "gpg \-\-decrypt ~/.newsboat/newsblur\-password.gpg")
.RE
.sp
\fInewsblur\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: newsblur\-passwordfile "~/.newsboat/newsblur\-pw.txt")
.RE
.sp
\fInewsblur\-url\fP (parameters: <url>; default value: \fI"https://newsblur.com"\fP)
.RS 4
Configures the URL where the NewsBlur instance resides. (example: newsblur\-url "https://localhost")
.RE
.sp
\fInotify\-always\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIno\fP, notifications will only be made when there are new feeds or articles. If set to \fIyes\fP, notifications will be made regardless. (example: notify\-always yes)
.RE
.sp
\fInotify\-beep\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the speaker will beep on new articles. (example: notify\-beep yes)
.RE
.sp
\fInotify\-format\fP (parameters: <string>; default value: \fI"Newsboat: finished reload, %f unread feeds (%n unread articles total)" (localized)\fP)
.RS 4
Format string that is used for formatting notifications. (example: notify\-format "%d new articles (%n unread articles, %f unread feeds)")
.RE
.sp
\fInotify\-program\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
If set, then the configured program will be executed if new articles arrived (through a reload) or if \fInotify\-always\fP is \fIyes\fP. The first parameter of the called program contains the notification message. In order to pass other hard\-coded arguments to the program, write an appropriate wrapper shell script and use it as <command> instead. (example: notify\-program "~/bin/my\-notifier")
.RE
.sp
\fInotify\-screen\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then a "privacy message" will be sent to the terminal, containing a notification message about new articles. This is especially useful if you use terminal emulations such as GNU screen which implement privacy messages. (example: notify\-screen yes)
.RE
.sp
\fInotify\-xterm\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the xterm window title will be set to a notification message about new articles. (example: notify\-xterm yes)
.RE
.sp
\fIocnews\-flag\-star\fP (parameters: <character>; default value: \fI""\fP)
.RS 4
If set and ownCloud News support is used, then all articles that are flagged with the specified flag are being "starred" in ownCloud News. (example: ocnews\-flag\-star "s")
.RE
.sp
\fIocnews\-login\fP (parameters: <username>; default value: \fI""\fP)
.RS 4
Sets the username to use with the ownCloud instance. (example: ocnews\-login "user")
.RE
.sp
\fIocnews\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
Configures the password to use with the ownCloud instance. Double quotes and backslashes within it should be escaped. (example: ocnews\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIocnews\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: ocnews\-passwordeval "gpg \-\-decrypt ~/.newsboat/ocnews\-password.gpg")
.RE
.sp
\fIocnews\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: ocnews\-passwordfile "~/.newsboat/ocnews\-pw.txt")
.RE
.sp
\fIocnews\-url\fP (parameters: <url>; default value: \fI""\fP)
.RS 4
Configures the URL where the ownCloud instance resides. (example: ocnews\-url "https://localhost/owncloud")
.RE
.sp
\fIoldreader\-flag\-share\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and The Old Reader support is used, then all articles that are flagged with the specified flag are being "shared" in The Old Reader so that people that follow you can see it. (example: oldreader\-flag\-share "a")
.RE
.sp
\fIoldreader\-flag\-star\fP (parameters: <flag>; default value: \fI""\fP)
.RS 4
If set and The Old Reader support is used, then all articles that are flagged with the specified flag are being "starred" in The Old Reader and appear in the list of "Starred items". (example: oldreader\-flag\-star "b")
.RE
.sp
\fIoldreader\-login\fP (parameters: <login>; default value: \fI""\fP)
.RS 4
This variable sets your The Old Reader login for The Older Reader support. (example: oldreader\-login "your\-login")
.RE
.sp
\fIoldreader\-min\-items\fP (parameters: <number>; default value: \fI20\fP)
.RS 4
This variable sets the number of articles that are loaded from The Old Reader per feed. (example: oldreader\-min\-items 100)
.RE
.sp
\fIoldreader\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
This variable sets your The Old Reader password for The Old Reader support. Double quotes and backslashes within it should be escaped. (example: oldreader\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIoldreader\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: oldreader\-passwordeval "gpg \-\-decrypt ~/.newsboat/oldreader\-password.gpg")
.RE
.sp
\fIoldreader\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: oldreader\-passwordfile "~/.newsboat/oldreader\-pw.txt")
.RE
.sp
\fIoldreader\-show\-special\-feeds\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set and The Old reader support is used, then "special feeds" like "People you follow" (articles shared by people you follow), "Starred items" (your starred articles) and "Shared items" (your shared articles) appear in your subscription list. (example: oldreader\-show\-special\-feeds "no")
.RE
.sp
\fIopenbrowser\-and\-mark\-jumps\-to\-next\-unread\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, jump to the next unread item when an item is opened in the browser and marked as read. (example: openbrowser\-and\-mark\-jumps\-to\-next\-unread yes)
.RE
.sp
\fIopml\-url\fP (parameters: <url> ...; default value: \fI""\fP)
.RS 4
If the OPML online subscription mode is enabled, then the list of feeds will be taken from the OPML file found on this location. Optionally, you can specify more than one URL. All the listed OPML URLs will then be taken into account when loading the feed list. (example: opml\-url "https://host.domain.tld/blogroll.opml" "https://example.com/anotheropmlfile.opml")
.RE
.sp
\fIpager\fP (parameters: [<command>/internal]; default value: \fIinternal\fP)
.RS 4
If set to \fIinternal\fP, then the internal pager will be used. Otherwise, the article to be displayed will be rendered to be a temporary file and then displayed with the configured pager. If the command is set to an empty string, the content of the \fIPAGER\fP environment variable will be used. If the command contains a placeholder \fI%f\fP, it will be replaced with the temporary filename. (example: pager "less %f")
.RE
.sp
\fIpodcast\-auto\-enqueue\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then all podcast URLs that are found in articles are added to the podcast download queue. See the respective section in the documentation for more information on podcast support in Newsboat. (example: podcast\-auto\-enqueue yes)
.RE
.sp
\fIprepopulate\-query\-feeds\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then all query feeds are prepopulated with articles on startup. (example: prepopulate\-query\-feeds yes)
.RE
.sp
\fIproxy\fP (parameters: <server:port>; default value: \fIn/a\fP)
.RS 4
Set the proxy to use for downloading RSS feeds. (Don\(cqt forget to actually enable the proxy with \fIuse\-proxy yes\fP.) Note that the \fINO_PROXY\fP environment variable can disable the proxy for certain sites. (example: proxy localhost:3128)
.RE
.sp
\fIproxy\-auth\fP (parameters: <auth>; default value: \fIn/a\fP)
.RS 4
Set the proxy authentication string. (example: proxy\-auth user:password)
.RE
.sp
\fIproxy\-auth\-method\fP (parameters: <method>; default value: \fIany\fP)
.RS 4
Set proxy authentication method. Allowed values: \fIany\fP, \fIbasic\fP, \fIdigest\fP, \fIdigest_ie\fP (only available with libcurl 7.19.3 and newer), \fIgssnegotiate\fP, \fIntlm\fP and \fIanysafe\fP. (example: proxy\-auth\-method ntlm)
.RE
.sp
\fIproxy\-type\fP (parameters: <type>; default value: \fIhttp\fP)
.RS 4
Set proxy type. Allowed values: \fIhttp\fP, \fIsocks4\fP, \fIsocks4a\fP, \fIsocks5\fP and \fIsocks5h\fP. (example: proxy\-type socks5)
.RE
.sp
\fIrefresh\-on\-startup\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then all feeds will be reloaded when Newsboat starts up. This is equivalent to the \fI\-r\fP commandline option. See also \fIauto\-reload\fP to additionally reload the feeds continuously. (example: refresh\-on\-startup yes)
.RE
.sp
\fIreload\-only\-visible\-feeds\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then manually reloading all feeds will only reload the currently visible feeds, e.g. if a filter or a tag is set. (example: reload\-only\-visible\-feeds yes)
.RE
.sp
\fIreload\-threads\fP (parameters: <number>; default value: \fI1\fP)
.RS 4
The number of parallel reload threads that shall be started when all feeds are reloaded. (example: reload\-threads 3)
.RE
.sp
\fIreload\-time\fP (parameters: <number>; default value: \fI60\fP)
.RS 4
The number of minutes between automatic reloads. (example: reload\-time 120)
.RE
.sp
\fIreset\-unread\-on\-update\fP (parameters: <url> [<url>...]; default value: \fIn/a\fP)
.RS 4
Specifies one or more feed URLs for whose articles the unread flag will be reset if an article has been updated, i.e. its content has been changed. This is especially useful for RSS feeds where single articles are updated after publication, and you want to be notified of the updates. This option can be specified multiple times. (example: reset\-unread\-on\-update "https://blog.fefe.de/rss.xml?html")
.RE
.sp
\fIrestrict\-filename\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIno\fP, Newsboat will not limit saved article filenames to ASCII characters. (example: restrict\-filename no)
.RE
.sp
\fIrun\-on\-startup\fP (parameters: <list of operations>; default value: \fIn/a\fP)
.RS 4
Specifies one or more Newsboat operations, separated by semicolons, which are executed on Newsboat startup. (example: run\-on\-startup next\-unread; open; random\-unread; open)
.RE
.sp
\fIsave\-path\fP (parameters: <path\-to\-directory>; default value: \fI~/\fP)
.RS 4
The default path where articles shall be saved to. If an invalid path is specified, the current directory is used. (example: save\-path "~/Saved Articles")
.RE
.sp
\fIscrolloff\fP (parameters: <number>; default value: \fI0\fP)
.RS 4
Keep the configured number of lines above and below the selected item in lists. Configure a high number to keep the selected item in the center of the screen. (example: scrolloff 5)
.RE
.sp
\fIsearch\-highlight\-colors\fP (parameters: <fgcolor> <bgcolor> [<attribute> ...]; default value: \fIblack yellow bold\fP)
.RS 4
This configuration command specifies the highlighting colors when searching for text from the article view. (example: search\-highlight\-colors white black bold)
.RE
.sp
\fIsearchresult\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Search results for \*(Aq%s\*(Aq (%u unread, %t total)%?F? matching filter \*(Aq%F\*(Aq&?" (localized)\fP)
.RS 4
Format of the title in search result. See "Format Strings" section of Newsboat manual for details on available formats. (example: searchresult\-title\-format "Search result")
.RE
.sp
\fIselectfilter\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Select Filter" (localized)\fP)
.RS 4
Format of the title in filter selection dialog. See "Format Strings" section of Newsboat manual for details on available formats. (example: selectfilter\-title\-format "Select Filter")
.RE
.sp
\fIselecttag\-format\fP (parameters: <format>; default value: \fI"%4i  %T (%u)"\fP)
.RS 4
Format of the lines in "Select tag" dialog. See the respective section in the documentation for more information on format strings. (example: selecttag\-format "[%2i] %T (%n unread articles in %f feeds, %u feeds total)")
.RE
.sp
\fIselecttag\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- Select Tag" (localized)\fP)
.RS 4
Format of the title in tag selection dialog. See "Format Strings" section of Newsboat manual for details on available formats. (example: selecttag\-title\-format "Select Tag")
.RE
.sp
\fIshow\-keymap\-hint\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIno\fP, then the keymap hints will not be displayed. (The keymap hints are usually at the bottom of the screen, but see \fIswap\-title\-and\-hints\fP setting.) (example: show\-keymap\-hint no)
.RE
.sp
\fIshow\-read\-articles\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then all articles of a feed are listed in the article list. If set to \fIno\fP, then only unread articles are listed. (example: show\-read\-articles no)
.RE
.sp
\fIshow\-read\-feeds\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIyes\fP, then all feeds, including those without unread articles, are listed. If set to \fIno\fP, then only feeds with one or more unread articles are list. (example: show\-read\-feeds no)
.RE
.sp
\fIshow\-title\-bar\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIno\fP, then the title bar will not be displayed. (The title bar is usually at the top of the screen, but see \fIswap\-title\-and\-hints\fP setting.) (example: show\-title\-bar no)
.RE
.sp
\fIssl\-verifyhost\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIno\fP, skip verification of the certificate\(cqs name against host. (example: ssl\-verifyhost no)
.RE
.sp
\fIssl\-verifypeer\fP (parameters: [yes/no]; default value: \fIyes\fP)
.RS 4
If set to \fIno\fP, skip verification of the peer\(cqs SSL certificate. (example: ssl\-verifypeer no)
.RE
.sp
\fIsuppress\-first\-reload\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the first automatic reload will be suppressed if \fIauto\-reload\fP is set to \fIyes\fP. (example: suppress\-first\-reload yes)
.RE
.sp
\fIswap\-title\-and\-hints\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the title (which is usually at the top of the screen) and the keymap hints (usually at the bottom) will exchange places. These bars can be hidden entirely, via the \fIshow\-keymap\-hints\fP and \fIshow\-title\-bar\fP settings. (example: swap\-title\-and\-hints yes)
.RE
.sp
\fItext\-width\fP (parameters: <number>; default value: \fI0\fP)
.RS 4
If set to a number greater than 0, all HTML will be rendered to this maximum line length or the terminal width (whichever is smaller). If set to 0, the terminal width will always be used in the article view, while \fIpipe\-to\fP, \fIsave\fP, and \fIsave\-all\fP will wrap at 80 columns instead. Does not apply when using external renderer or viewing the source. Also note that "Link" header and "Links" section won\(cqt be affected by it—they contain URLs which are better not wrapped. (example: text\-width 72)
.RE
.sp
\fItoggleitemread\-jumps\-to\-next\-unread\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, jump to the next unread item when an item\(cqs read status is toggled in the article list. (example: toggleitemread\-jumps\-to\-next\-unread yes)
.RE
.sp
\fIttrss\-flag\-publish\fP (parameters: <character>; default value: \fI""\fP)
.RS 4
If set and Tiny Tiny RSS support is used, then all articles that are flagged with the specified flag are being marked as "published" in Tiny Tiny RSS. (example: ttrss\-flag\-publish "b")
.RE
.sp
\fIttrss\-flag\-star\fP (parameters: <character>; default value: \fI""\fP)
.RS 4
If set and Tiny Tiny RSS support is used, then all articles that are flagged with the specified flag are being "starred" in Tiny Tiny RSS. (example: ttrss\-flag\-star "a")
.RE
.sp
\fIttrss\-login\fP (parameters: <username>; default value: \fI""\fP)
.RS 4
Sets the username for use with Tiny Tiny RSS. (example: ttrss\-login "admin")
.RE
.sp
\fIttrss\-mode\fP (parameters: [multi/single]; default value: \fImulti\fP)
.RS 4
Configures the mode in which Tiny Tiny RSS is used. In single\-user mode, login and password are used for HTTP authentication, while in multi\-user mode, they are used for authenticating with Tiny Tiny RSS. (example: ttrss\-mode "single")
.RE
.sp
\fIttrss\-password\fP (parameters: <password>; default value: \fI""\fP)
.RS 4
Configures the password for use with Tiny Tiny RSS. Double quotes and backslashes within it should be escaped. (example: ttrss\-password "here_goesAquote:\(rs"")
.RE
.sp
\fIttrss\-passwordeval\fP (parameters: <command>; default value: \fI""\fP)
.RS 4
A more secure alternative to the above, is providing your password from an external command that is evaluated during login. This can be used to read your password from a gpg encrypted file or your system keyring. (example: ttrss\-passwordeval "gpg \-\-decrypt ~/.newsboat/ttrss\-password.gpg")
.RE
.sp
\fIttrss\-passwordfile\fP (parameters: <path>; default value: \fI""\fP)
.RS 4
Another alternative, by storing your plaintext password elsewhere in your system. (example: ttrss\-passwordfile "~/.newsboat/ttrss\-pw.txt")
.RE
.sp
\fIttrss\-url\fP (parameters: <url>; default value: \fI""\fP)
.RS 4
Configures the URL where the Tiny Tiny RSS installation you want to use resides. (example: ttrss\-url "https://example.com/ttrss/")
.RE
.sp
\fIunbind\-key\fP (parameters: <key> [<dialog>]; default value: \fIn/a\fP)
.RS 4
Unbind key <key>. This means that no operation is called when <key> is pressed. If you provide "\-a" as <key>, all currently bound keys will become unbound. Optionally, you can specify a dialog (for a list of available dialogs, see \fIbind\-key\fP above). If you specify one, the key binding will only be unbound for the specified dialog. (example: unbind\-key R)
.RE
.sp
\fIurls\-source\fP (parameters: <source>; default value: \fI"local"\fP)
.RS 4
This configuration command sets the source where URLs shall be retrieved from. By default, this is the \fIurls\fP file. Alternatively, you can set it to \fIopml\fP, which enables Newsboat\(cqs OPML online subscription mode, to \fIttrss\fP which enables Newsboat\(cqs Tiny Tiny RSS support, to \fIoldreader\fP, which enables Newsboat\(cqs The Old Reader support, to \fInewsblur\fP, which enables NewsBlur support, to \fIfeedhq\fP for FeedHQ support, to \fIfreshrss\fP for FreshRSS support, to \fIocnews\fP for ownCloud News support, to \fIinoreader\fP for Inoreader support, or to \fIminiflux\fP for Miniflux support. Query feed specifications will be read from the local urls file regardless of this setting. (example: urls\-source "oldreader")
.RE
.sp
\fIurlview\-title\-format\fP (parameters: <format>; default value: \fI"%N %V \- URLs" (localized)\fP)
.RS 4
Format of the title in URL view. See "Format Strings" section of Newsboat manual for details on available formats. (example: urlview\-title\-format "URLs")
.RE
.sp
\fIuse\-proxy\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, then the configured proxy will be used for downloading the RSS feeds. (example: use\-proxy yes)
.RE
.sp
\fIuser\-agent\fP (parameters: <string>; default value: \fI""\fP)
.RS 4
If set to a non\-zero\-length string, this value will be used as HTTP User\-Agent header for all HTTP requests. (example: user\-agent "Lynx/2.8.5rel.1 libwww\-FM/2.14")
.RE
.sp
\fIwrap\-scroll\fP (parameters: [yes/no]; default value: \fIno\fP)
.RS 4
If set to \fIyes\fP, moving down while on the last item in a list will wrap around to the top and vice versa. (example: wrap\-scroll yes)
.RE
.SH "AVAILABLE OPERATIONS"
.sp
\fIopen\fP (default key: \fI\f(CRENTER\fP\fP)
.RS 4
Open the currently selected feed or article.
.RE
.sp
\fIquit\fP (default key: \fI\f(CRQ\fP\fP)
.RS 4
Quit the program or return to the previous dialog (depending on the context).
.RE
.sp
\fIhard\-quit\fP (default key: \fI\f(CRShift\0+\0Q\fP\fP)
.RS 4
Quit the program without confirmation.
.RE
.sp
\fIreload\fP (default key: \fI\f(CRR\fP\fP)
.RS 4
Reload the currently selected feed.
.RE
.sp
\fIreload\-all\fP (default key: \fI\f(CRShift\0+\0R\fP\fP)
.RS 4
Reload all feeds.
.RE
.sp
\fImark\-feed\-read\fP (default key: \fI\f(CRShift\0+\0A\fP\fP)
.RS 4
Mark all articles in the currently selected feed read.
.RE
.sp
\fImark\-all\-feeds\-read\fP (default key: \fI\f(CRShift\0+\0C\fP\fP)
.RS 4
Mark articles in all feeds read.
.RE
.sp
\fImark\-all\-above\-as\-read\fP (default key: \fIn/a\fP)
.RS 4
Mark all above as read.
.RE
.sp
\fIsave\fP (default key: \fI\f(CRS\fP\fP)
.RS 4
Export the currently selected article to a plain text file, word\-wrapped according to the \fItext\-width\fP setting.
.RE
.sp
\fIsave\-all\fP (default key: \fIn/a\fP)
.RS 4
Export all articles from the currently selected feed to plain text files, word\-wrapped according to the \fItext\-width\fP setting.
.RE
.sp
\fInext\-unread\fP (default key: \fI\f(CRN\fP\fP)
.RS 4
Jump to the next unread article.
.RE
.sp
\fIprev\-unread\fP (default key: \fI\f(CRP\fP\fP)
.RS 4
Jump to the previous unread article.
.RE
.sp
\fInext\fP (default key: \fI\f(CRShift\0+\0J\fP\fP)
.RS 4
Jump to next list entry.
.RE
.sp
\fIprev\fP (default key: \fI\f(CRShift\0+\0K\fP\fP)
.RS 4
Jump to previous list entry.
.RE
.sp
\fIrandom\-unread\fP (default key: \fI\f(CRCtrl\0+\0K\fP\fP)
.RS 4
Jump to a random unread article.
.RE
.sp
\fIopen\-in\-browser\fP (default key: \fI\f(CRO\fP\fP)
.RS 4
Use browser to open the URL associated with the current article, feed, or entry in the URL view.
.RE
.sp
\fIopen\-in\-browser\-noninteractively\fP (default key: \fIn/a\fP)
.RS 4
Use browser to open the URL associated with the current article, feed, or entry in the URL view. This operation works similar to \fIopen\-in\-browser\fP, but the output of the browser (stdout and stderr) is not shown, and the browser doesn\(cqt receive keyboard input. You would probably add \fI&\fP at the end of the \fIbrowser\fP command to put it into background, too.
.RE
.sp
\fIopen\-in\-browser\-and\-mark\-read\fP (default key: \fI\f(CRShift\0+\0O\fP\fP)
.RS 4
Use browser to open the URL associated with the current article, or entry in the URL view. When used in the article list, it will also mark the article as read.
.RE
.sp
\fIopen\-all\-unread\-in\-browser\fP (default key: \fIn/a\fP)
.RS 4
Open all the unread URLs in the current feed.
.RE
.sp
\fIopen\-all\-unread\-in\-browser\-and\-mark\-read\fP (default key: \fIn/a\fP)
.RS 4
Open all the unread URLs in the current feed and mark them as read.
.RE
.sp
\fIhelp\fP (default key: \fI\f(CR?\fP\fP)
.RS 4
Run the help screen.
.RE
.sp
\fItoggle\-source\-view\fP (default key: \fI\f(CRCtrl\0+\0U\fP\fP)
.RS 4
Toggle between the HTML view and the source view in the article view.
.RE
.sp
\fItoggle\-article\-read\fP (default key: \fI\f(CRShift\0+\0N\fP\fP)
.RS 4
Toggle the read flag for the currently selected article, and clear the delete flag if set.
.RE
.sp
\fItoggle\-show\-read\-feeds\fP (default key: \fI\f(CRL\fP\fP)
.RS 4
Toggle whether read feeds should be shown in the feed list.
.RE
.sp
\fIshow\-urls\fP (default key: \fI\f(CRU\fP\fP)
.RS 4
Show all URLs in the article in a list (similar to urlview).
.RE
.sp
\fIclear\-tag\fP (default key: \fI\f(CRCtrl\0+\0T\fP\fP)
.RS 4
Clear current tag.
.RE
.sp
\fIset\-tag\fP (default key: \fI\f(CRT\fP\fP)
.RS 4
Select tag.
.RE
.sp
\fIopen\-search\fP (default key: \fI\f(CR/\fP\fP)
.RS 4
Open the search dialog. When a search is done in the article list, then the search operation only applies to the articles of the current feed, otherwise to all articles.
.RE
.sp
\fIgoto\-url\fP (default key: \fI\f(CR#\fP\fP)
.RS 4
Open the URL dialog and then open a specified URL in the browser.
.RE
.sp
\fIone\fP (default key: \fI\f(CR1\fP\fP)
.RS 4
Open URL 1 in the browser.
.RE
.sp
\fItwo\fP (default key: \fI\f(CR2\fP\fP)
.RS 4
Open URL 2 in the browser.
.RE
.sp
\fIthree\fP (default key: \fI\f(CR3\fP\fP)
.RS 4
Open URL 3 in the browser.
.RE
.sp
\fIfour\fP (default key: \fI\f(CR4\fP\fP)
.RS 4
Open URL 4 in the browser.
.RE
.sp
\fIfive\fP (default key: \fI\f(CR5\fP\fP)
.RS 4
Open URL 5 in the browser.
.RE
.sp
\fIsix\fP (default key: \fI\f(CR6\fP\fP)
.RS 4
Open URL 6 in the browser.
.RE
.sp
\fIseven\fP (default key: \fI\f(CR7\fP\fP)
.RS 4
Open URL 7 in the browser.
.RE
.sp
\fIeight\fP (default key: \fI\f(CR8\fP\fP)
.RS 4
Open URL 8 in the browser.
.RE
.sp
\fInine\fP (default key: \fI\f(CR9\fP\fP)
.RS 4
Open URL 9 in the browser.
.RE
.sp
\fIzero\fP (default key: \fI\f(CR0\fP\fP)
.RS 4
Open URL 10 in the browser.
.RE
.sp
\fIcmd\-one\fP (default key: \fI\f(CR1\fP\fP)
.RS 4
Start cmdline with 1.
.RE
.sp
\fIcmd\-two\fP (default key: \fI\f(CR2\fP\fP)
.RS 4
Start cmdline with 2.
.RE
.sp
\fIcmd\-three\fP (default key: \fI\f(CR3\fP\fP)
.RS 4
Start cmdline with 3.
.RE
.sp
\fIcmd\-four\fP (default key: \fI\f(CR4\fP\fP)
.RS 4
Start cmdline with 4.
.RE
.sp
\fIcmd\-five\fP (default key: \fI\f(CR5\fP\fP)
.RS 4
Start cmdline with 5.
.RE
.sp
\fIcmd\-six\fP (default key: \fI\f(CR6\fP\fP)
.RS 4
Start cmdline with 6.
.RE
.sp
\fIcmd\-seven\fP (default key: \fI\f(CR7\fP\fP)
.RS 4
Start cmdline with 7.
.RE
.sp
\fIcmd\-eight\fP (default key: \fI\f(CR8\fP\fP)
.RS 4
Start cmdline with 8.
.RE
.sp
\fIcmd\-nine\fP (default key: \fI\f(CR9\fP\fP)
.RS 4
Start cmdline with 9.
.RE
.sp
\fIenqueue\fP (default key: \fI\f(CRE\fP\fP)
.RS 4
Add the podcast download URL of the current article (if any is found) to the podcast download queue (see the respective section in the documentation for more information on podcast support).
.RE
.sp
\fIedit\-urls\fP (default key: \fI\f(CRShift\0+\0E\fP\fP)
.RS 4
Edit the list of subscribed URLs. Newsboat will start the editor configured through the \fIVISUAL\fP environment variable (if unset, \fIEDITOR\fP is used; fallback: \fIvi\fP). When editing is finished, Newsboat will reload the URLs file.
.RE
.sp
\fIreload\-urls\fP (default key: \fI\f(CRCtrl\0+\0R\fP\fP)
.RS 4
Reload the URLs configuration file.
.RE
.sp
\fIredraw\fP (default key: \fI\f(CRCtrl\0+\0L\fP\fP)
.RS 4
Redraw the screen.
.RE
.sp
\fIcmdline\fP (default key: \fI\f(CR:\fP\fP)
.RS 4
Open the command line.
.RE
.sp
\fIset\-filter\fP (default key: \fI\f(CRShift\0+\0F\fP\fP)
.RS 4
Set a filter.
.RE
.sp
\fIselect\-filter\fP (default key: \fI\f(CRF\fP\fP)
.RS 4
Select a predefined filter.
.RE
.sp
\fIclear\-filter\fP (default key: \fI\f(CRCtrl\0+\0F\fP\fP)
.RS 4
Clear currently set filter.
.RE
.sp
\fIbookmark\fP (default key: \fI\f(CRCtrl\0+\0B\fP\fP)
.RS 4
Bookmark currently selected article or URL.
.RE
.sp
\fIedit\-flags\fP (default key: \fI\f(CRCtrl\0+\0E\fP\fP)
.RS 4
Edit the flags of the currently selected article.
.RE
.sp
\fInext\-unread\-feed\fP (default key: \fI\f(CRCtrl\0+\0N\fP\fP)
.RS 4
Go to the next feed with unread articles. This only works from the article list.
.RE
.sp
\fIprev\-unread\-feed\fP (default key: \fI\f(CRCtrl\0+\0P\fP\fP)
.RS 4
Go to the previous feed with unread articles. This only works from the article list.
.RE
.sp
\fInext\-feed\fP (default key: \fI\f(CRJ\fP\fP)
.RS 4
Go to the next feed. This only works from the article list.
.RE
.sp
\fIprev\-feed\fP (default key: \fI\f(CRK\fP\fP)
.RS 4
Go to the previous feed. This only works from the article list.
.RE
.sp
\fIdelete\-article\fP (default key: \fI\f(CRShift\0+\0D\fP\fP)
.RS 4
Delete the currently selected article.
.RE
.sp
\fIdelete\-all\-articles\fP (default key: \fI\f(CRCtrl\0+\0D\fP\fP)
.RS 4
Delete all articles in the articlelist. Note that the articlelist might contain a subset of feed\(cqs articles (because of filters or \fIshow\-read\-articles no\fP), or it might contain a mix of articles from different feeds (if you\(cqre viewing a query feed) — in either case, \fIdelete\-all\-articles\fP affects just those articles, not all articles of the respective feed(s).
.RE
.sp
\fIpurge\-deleted\fP (default key: \fI\f(CR$\fP\fP)
.RS 4
Purge all articles that are marked as deleted from the article list.
.RE
.sp
\fIview\-dialogs\fP (default key: \fI\f(CRV\fP\fP)
.RS 4
View list of open dialogs.
.RE
.sp
\fIclose\-dialog\fP (default key: \fI\f(CRCtrl\0+\0X\fP\fP)
.RS 4
Close currently selected dialog.
.RE
.sp
\fInext\-dialog\fP (default key: \fI\f(CRCtrl\0+\0V\fP\fP)
.RS 4
Go to next dialog.
.RE
.sp
\fIprev\-dialog\fP (default key: \fI\f(CRCtrl\0+\0G\fP\fP)
.RS 4
Go to previous dialog.
.RE
.sp
\fIpipe\-to\fP (default key: \fI\f(CR|\fP\fP)
.RS 4
Pipe article to command. The text will be word\-wrapped according to the \fItext\-width\fP setting.
.RE
.sp
\fIsort\fP (default key: \fI\f(CRG\fP\fP)
.RS 4
Sort feeds/articles by interactively choosing the sort method.
.RE
.sp
\fIrev\-sort\fP (default key: \fI\f(CRShift\0+\0G\fP\fP)
.RS 4
Sort feeds/articles by interactively choosing the sort method (reversed).
.RE
.sp
\fIup\fP (default key: \fI\f(CRUP\fP\fP)
.RS 4
Go up one item in the list.
.RE
.sp
\fIdown\fP (default key: \fI\f(CRDOWN\fP\fP)
.RS 4
Go down one item in the list.
.RE
.sp
\fIpageup\fP (default key: \fI\f(CRPPAGE\fP\fP)
.RS 4
Go up one page in the list.
.RE
.sp
\fIpagedown\fP (default key: \fI\f(CRNPAGE\fP\fP)
.RS 4
Go down one page in the list.
.RE
.sp
\fIhalfpageup\fP (default key: \fIn/a\fP)
.RS 4
Go up half a page.
.RE
.sp
\fIhalfpagedown\fP (default key: \fIn/a\fP)
.RS 4
Go down half a page.
.RE
.sp
\fIhome\fP (default key: \fI\f(CRHOME\fP\fP)
.RS 4
Go to the first item in the list.
.RE
.sp
\fIend\fP (default key: \fI\f(CREND\fP\fP)
.RS 4
Go to the last item in the list.
.RE
.sp
\fImacro\-prefix\fP (default key: \fI\f(CR,\fP\fP)
.RS 4
Initiate macro execution. The next key press selects the actual macro and runs it.
.RE
.sp
\fIswitch\-focus\fP (default key: \fI\f(CRTAB\fP\fP)
.RS 4
Switch focus between widgets. This is currently only applicable to the \fIfilebrowser\fP and \fIdirbrowser\fP contexts.
.RE
.sp
\fIgoto\-title\fP (default key: \fIn/a\fP)
.RS 4
Go to item whose title contains the specified string (case\-insensitive).
.RE
.sp
\fIprevsearchresults\fP (default key: \fI\f(CRZ\fP\fP)
.RS 4
Return to previous search results (if any). This only works from \fIsearchresultslist\fP.
.RE
.sp
\fIarticle\-feed\fP (default key: \fIn/a\fP)
.RS 4
Go to the feed of the currently selected article.
.RE
.SH "TAGGING"
.sp
Newsboat comes with the possibility to categorize or "tag", as we call it,
RSS feeds. Every RSS feed can be assigned 0 or more tags. Within Newsboat, you
can then select to only show RSS feeds that match a certain tag. That makes it
easy to categorize your feeds in a flexible and powerful way.
.sp
Usually, the \fIurls\fP file contains one RSS feed URL per line. To assign a tag to
an RSS feed, simply attach it as a single word, separated by blanks such as
space or tab. If the tag needs to contain spaces, you must use quotes (\fI"\fP)
around the tag (see example below). An example \fIurls\fP file may look like this:
.sp
.if n .RS 4
.nf
.fam C
https://blog.fefe.de/rss.xml?html interesting conspiracy news "cool stuff"
https://rss.orf.at/news.xml news orf
https://www.heise.de/newsticker/heise.rdf news interesting
.fam
.fi
.if n .RE
.sp
When you now start Newsboat with this configuration, you can press \f(CRT\fP to select
a tag. When you select the tag "news", you will see all three RSS feeds. Pressing
\f(CRT\fP again and e.g. selecting the "conspiracy" tag, you will only see the
.URL "https://blog.fefe.de/rss.xml?html" "" ""
RSS feed. Pressing \f(CRCtrl\0+\0T\fP clears the current tag,
and again shows all RSS feeds, regardless of their assigned tags.
.sp
A special type of tag are tags that start with the tilde character (\fI~\fP). When such
a tag is found, the feed title is set to the tag name (excluding the \fI~\fP character).
These type of tags are ignored when any kind of "first tag" property is used.
With this feature, you can give feeds any title you want in your feed list:
.sp
.if n .RS 4
.nf
.fam C
https://rss.orf.at/news.xml "~ORF News"
.fam
.fi
.if n .RE
.sp
Another special type of tag are tags that start with the exclamation mark (\fI!\fP). When
such a tag is found, the feed is hidden from the regular list of feeds and its
content can only be found through a query feed.
.sp
.if n .RS 4
.nf
.fam C
https://rss.orf.at/news.xml ! news
http://feeds.bbci.co.uk/news/world/rss.xml ! news
"query:News from around the globe:tags # \(rs"news\(rs""
.fam
.fi
.if n .RE
.sp
In this example, the first two feeds won\(cqt appear in the feedlist, but their
articles will still be accessible through the query feed titled "News from
around the globe". The "hidden" tags in this example don\(cqt even have names,
because their only use is to hide the feed that they\(cqre tagging.
.SH "SCRIPTS AND FILTERS"
.sp
Newsboat contains support for Snownews extensions. The
RSS feed readers Snownews and Liferea share a common way of extending the
readers with custom scripts. Two mechanisms, namely "execurl" and "filter" type
scripts, are available and supported by Newsboat.
.sp
An "execurl" script can be any program that gets executed and whose output is
interpreted as RSS feed, while "filter" scripts are fed with the content of a
configured URL and whose output is interpreted as RSS feed.
.sp
The configuration is simple and straight\-forward. Just add to your \fIurls\fP file
configuration lines like the following ones:
.sp
.if n .RS 4
.nf
.fam C
exec:~/bin/execurl\-script
filter:~/bin/filter\-script:https://some.test/url
.fam
.fi
.if n .RE
.sp
The first line shows how to add an execurl script to your configuration: start
the line with \fIexec:\fP and then immediately append the path of the script that
shall be executed.  If this script requires additional parameters, simply use
quotes (see Using Double Quotes for details):
.sp
.if n .RS 4
.nf
.fam C
"exec:~/bin/execurl\-script param1 param2"
.fam
.fi
.if n .RE
.sp
The second line shows how to add a filter script to your configuration: start
the line with \fIfilter:\fP, then immediately append the path of the script, then
append a colon (\fI:\fP), and then append the URL of the file that shall be fed to
the script. Again, if the script requires any parameters,
simply quote the whole thing:
.sp
.if n .RS 4
.nf
.fam C
"filter:~/bin/filter\-script param1 param2:https://url/foobar"
.fam
.fi
.if n .RE
.sp
In both cases, the tagging feature as described above is still available:
.sp
.if n .RS 4
.nf
.fam C
exec:~/bin/execurl\-script tag1 tag2 "quoted tag"
filter:~/bin/filter\-script:https://some.test/url tag3 tag4 tag5
.fam
.fi
.if n .RE
.sp
If you need to write your own extension, see
\c
.URL "https://web.archive.org/web/20090724045314/http://kiza.kcore.de/software/snownews/snowscripts/writing" "this
short guide"  for an introduction. A collection of existing
\c
.URL "https://github.com/msharov/snownews/tree/de3bd8b28191c4d4bc1be18275786613bcbc0c94/docs/untested" "scripts"
and
\c
.URL "https://github.com/msharov/snownews/tree/9fb45e4cdf1cf9dea55b9af66c13a4c238809851/docs/filters" "filters"
might help, too.
.sp
Newsboat comes with an example exec script which shows one way to generate an
RSS channel. It also includes a way to see which exact arguments are passed to
the script by Newsboat. This example can be found in the \fIdoc/examples\fP
subdirectory.
.SH "COMMAND LINE"
.sp
Like other text\-oriented software, Newsboat contains an internal commandline to
modify configuration variables ad hoc and to run own commands. It provides a flexible
access to the functionality of Newsboat which is especially useful for
advanced users.
.sp
To start the commandline, type \f(CR:\fP. You will see a ":" prompt at the bottom of
the screen, similar to tools like vi(m) or mutt. You can now enter commands.
Pressing the \f(CREnter\fP key executes the command (possibly giving feedback to the
user) and closes the commandline. You can cancel entering commands by pressing
the \f(CREsc\fP key. The history of all the commands that you enter will be saved to
the \fIhistory.cmdline\fP file, stored next to the \fIcache.db\fP file. The backlog is
limited to 100 entries by default, but can be influenced by setting the
\fIhistory\-limit\fP configuration variable. To disable history
saving, set the \fIhistory\-limit\fP to \fI0\fP.
.sp
The commandline provides you with some help if you can\(cqt remember the full
names of commandline commands. By pressing the \f(CRTab\fP key, Newsboat will try to
automatically complete your command. If there is more than one possible
completion, you can subsequently press the \f(CRTab\fP key to cycle through all
results. If no match is found, no suggestion will be inserted into the
commandline. For the \fIset\fP command, the completion also works for configuration
variable names.
.sp
In addition, some common key combination such as \f(CRCtrl\0+\0G\fP (to cancel input),
\f(CRCtrl\0+\0K\fP (to delete text from the cursor position to the end of line), \f(CRCtrl\0+\0U\fP (to
clear the whole line) and \f(CRCtrl\0+\0W\fP (to delete the word before the current cursor
position) were added.
.sp
Please be aware that the input history of both the command line and the search
functions are saved to the filesystems, to the files \fIhistory.cmdline\fP resp.
\fIhistory.search\fP (stored next to the \fIcache.db\fP file). By default, the last 100
entries are saved, but this can be configured (configuration variable
\fIhistory\-limit\fP) and also totally disabled (by setting said
variable to \fI0\fP).
.sp
Currently, the following command line commands are available:
.sp
\fIquit\fP
.RS 4
Quit Newsboat
.RE
.sp
\fIq\fP
.RS 4
Alias for \fIquit\fP
.RE
.sp
\fIsave\fP <filename>
.RS 4
Save current article to <filename>
.RE
.sp
 \fIset\fP <variable>[=<value>|&|!]
.RS 4
Set (or get) configuration variable value. Specifying a \fI!\fP after the name of a boolean configuration variable toggles their values, a \fI&\fP directly after the name of a configuration variable of any type resets its value to the documented default value.
.RE
.sp
\fItag\fP <tagname>
.RS 4
Select a certain tag
.RE
.sp
\fIgoto\fP <case\-insensitive substring>
.RS 4
Go to the next feed whose name contains the case\-insensitive substring.
.RE
.sp
\fIsource\fP <filename> [...]
.RS 4
Load the specified configuration files. This allows it to load alternative configuration files or reload already loaded configuration files on\-the\-fly from the filesystem.
.RE
.sp
\fIdumpconfig\fP <filename>
.RS 4
Save current internal state of configuration to file, so that it can be instantly reused as configuration file.
.RE
.sp
\fI<number>\fP
.RS 4
Jump to the <number>th entry in the current dialog
.RE
.SH "FILES"
.sp
By default, Newsboat stores all the files in a traditional Unix fashion, i.e.
in a "dotdir" located at \fI~/.newsboat\fP. However, it also supports a modern
way,
.URL "https://standards.freedesktop.org/basedir\-spec/basedir\-spec\-latest.html" "XDG Base Directory Specification" ","
which splits the files between the following locations:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
\fI$XDG_CONFIG_HOME/newsboat/\fP (\fIXDG_CONFIG_HOME\fP defaults to \fI~/.config\fP)
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
\fI$XDG_DATA_HOME/newsboat/\fP (\fIXDG_DATA_HOME\fP defaults to \fI~/.local/share\fP)
.RE
.sp
If the \fInewsboat\fP directory exists under \fIXDG_CONFIG_HOME\fP, then Newsboat will
use XDG directories (creating the data directory if necessary). Otherwise,
Newsboat will default to \fI~/.newsboat\fP.
.sp
If you\(cqre currently using \fI~/.newsboat/\fP but wish to migrate to XDG
directories, you should move the files as follows:
.sp
\fIconfig\fP, \fIurls\fP
.RS 4
to \fI$XDG_CONFIG_HOME/newsboat/\fP
.RE
.sp
\fIcache.db\fP, \fIhistory.search\fP, \fIhistory.cmdline\fP, \fIqueue\fP
.RS 4
to \fI$XDG_DATA_HOME/newsboat/\fP
.RE
.sp
Newsboat and Podboat also create "lock files". These prevent you from starting
two instances of the same program, and thus from corrupting your data. Newsboat
and Podboat remove these files when you quit the program, so there is no need
to copy them anywhere — just be aware of them in case you write scripts that
work with \fIcache.db\fP or \fIqueue\fP. By default, lock files are located as follows:
.TS
allbox tab(:);
lt lt lt.
T{
.sp

T}:T{
.sp
dotdir
T}:T{
.sp
XDG
T}
T{
.sp
Newsboat
T}:T{
.sp
\fI~/.newsboat/cache.db.lock\fP
T}:T{
.sp
\fI$XDG_DATA_HOME/newsboat/cache.db.lock\fP
T}
T{
.sp
Podboat
T}:T{
.sp
\fI~/.newsboat/pb\-lock.pid\fP
T}:T{
.sp
\fI$XDG_DATA_HOME/newsboat/.lock\fP
T}
.TE
.sp
.sp
Newsboat places the lock file next to the cache file, so if you specify
cache\-file setting or pass \fI\(emcache\-file\fP command\-line argument,
the path to the lock file will change too. Podboat, on the other hand, always
places its lock file as shown above.
.sp
dotfiles
.RS 4
\fI~/.newsboat/config\fP
.sp
\fI~/.newsboat/urls\fP
.RE
.sp
XDG
.RS 4
\fI$XDG_CONFIG_HOME/newsboat/config\fP
.sp
\fI$XDG_CONFIG_HOME/newsboat/urls\fP
.sp
Note: if the \fIXDG_CONFIG_HOME\fP environment variable is not set, Newsboat behaves as if it was set to \fI~/.config\fP.
.RE
.SH "ENVIRONMENT"
.sp
\fIBROWSER\fP
.RS 4
Tells Newsboat what browser to use if there is no \fIbrowser\fP
setting in the config file. If this variable doesn\(cqt exist, a default
of \fIlynx(1)\fP will be used.
.RE
.sp
\fICURL_CA_BUNDLE\fP
.RS 4
Tells Newsboat to use the specified certificate file to verify the peer.
The file may contain multiple certificates. The certificate(s) must be
in PEM format.
.sp
This option is useful if your libcurl is built without useful
certificate information, and you can\(cqt rebuild the library yourself.
.RE
.sp
\fIEDITOR\fP
.RS 4
Tells Newsboat what fallback editor to use when editing the \fIurls\fP file
via the \fIedit\-urls\fP operation and no \fIVISUAL\fP
environment variable is set. If this variable doesn\(cqt exist either, a
default of \fIvi(1)\fP will be used.
.RE
.sp
\fINO_PROXY\fP
.RS 4
Tells Newsboat to ignore \fIproxy\fP setting for certain sites.
.sp
This variable contains a comma\-separated list of hostnames, domain names, and
IP addresses.
.sp
Domain names match subdomains, i.e. "example.com" also matches
"foo.example.com". Domain names that start with a dot only match subdomains,
e.g. ".example.com" matches "bar.example.com" but not "example.com" itself.
.sp
IPv6 addresses are written without square brackets, and \fIare matched as
strings\fP. Thus "::1" doesn\(cqt match "::0:1" even though this is the same
address.
.RE
.sp
\fIPAGER\fP
.RS 4
Tells Newsboat what pager to use if the \fIpager\fP setting in
the config file is explicitly set to an empty string.
.RE
.sp
\fITMPDIR\fP
.RS 4
Tells Newsboat to use the specified directory for storing temporary files.
If this variable doesn\(cqt exist, a default of \fI/tmp\fP will be used.
.RE
.sp
\fIVISUAL\fP
.RS 4
Tells Newsboat what editor to use when editing the \fIurls\fP file via the
\fIedit\-urls\fP operation. If this variable doesn\(cqt exist,
the \fIEDITOR\fP environment variable will be used.
.RE
.sp
\fIXDG_CONFIG_HOME\fP
.RS 4
Tells Newsboat which base directory to use for the configuration files.
See also the section on files for more information.
.RE
.sp
\fIXDG_DATA_HOME\fP
.RS 4
Tells Newsboat which base directory to use for the data files. See also
the section on files for more information.
.RE
.SH "SEE ALSO"
.sp
podboat(1)
.SH "AUTHOR"
.sp
Alexander Batischev